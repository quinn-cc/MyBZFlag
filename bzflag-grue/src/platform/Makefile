# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/platform/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/bzflag
pkgincludedir = $(includedir)/bzflag
pkglibdir = $(libdir)/bzflag
pkglibexecdir = $(libexecdir)/bzflag
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
#am__append_1 = \
#	SDLJoystick.cxx				\
#	SDLJoystick.h				\
#	SDLPlatformFactory.cxx			\
#	SDLPlatformFactory.h			\
#	SDLMedia.cxx				\
#	SDLMedia.h

##am__append_2 = \
##	SDL2Display.cxx				\
##	SDL2Display.h				\
##	SDL2Visual.cxx				\
##	SDL2Visual.h				\
##	SDL2Window.cxx				\
##	SDL2Window.h

#am__append_3 = \
#	SDLDisplay.cxx				\
#	SDLDisplay.h

am__append_4 = \
	wave.cxx				\
	wave.h					\
	LinuxPlatformFactory.cxx		\
	LinuxPlatformFactory.h			\
	LinuxDisplay.cxx			\
	LinuxDisplay.h				\
	LinuxMedia.cxx				\
	LinuxMedia.h				\
	USBJoystick.cxx				\
	USBJoystick.h				\
	XIJoystick.cxx				\
	XIJoystick.h				\
	XDisplay.cxx				\
	XDisplay.h				\
	XVisual.cxx				\
	XVisual.h				\
	XWindow.cxx				\
	XWindow.h

##am__append_5 = \
##	SDLJoystick.cxx         \
##	SDLJoystick.h           \
##	SDLPlatformFactory.cxx  \
##	SDLPlatformFactory.h    \
##	SDLMedia.cxx            \
##	SDLMedia.h

###am__append_6 = \
###	SDL2Display.cxx         \
###	SDL2Display.h           \
###	SDL2Visual.cxx          \
###	SDL2Visual.h            \
###	SDL2Window.cxx          \
###	SDL2Window.h

##am__append_7 = \
##	SDLMain.h               \
##	SDLMain.m               \
##	SDLDisplay.cxx          \
##	SDLDisplay.h

subdir = src/platform
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/cache.m4 \
	$(top_srcdir)/m4/curses.m4 $(top_srcdir)/m4/isnan.m4 \
	$(top_srcdir)/m4/libcurl.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/m4_ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/m4_ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/m4/sdl.m4 $(top_srcdir)/m4/sdl2.m4 \
	$(top_srcdir)/m4/stage.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libPlatform_la_LIBADD =
am__libPlatform_la_SOURCES_DIST = PlatformFactory.cxx BzfDisplay.cxx \
	BzfJoystick.cxx BzfVisual.cxx BzfWindow.cxx BzfMedia.cxx \
	wave.cxx wave.h MacDataPath.cxx SDLJoystick.cxx SDLJoystick.h \
	SDLPlatformFactory.cxx SDLPlatformFactory.h SDLMedia.cxx \
	SDLMedia.h SDL2Display.cxx SDL2Display.h SDL2Visual.cxx \
	SDL2Visual.h SDL2Window.cxx SDL2Window.h SDLMain.h SDLMain.m \
	SDLDisplay.cxx SDLDisplay.h BeOSPlatformFactory.cxx \
	BeOSPlatformFactory.h BeOSDisplay.cxx BeOSDisplay.h \
	BeOSVisual.cxx BeOSVisual.h BeOSWindow.cxx BeOSWindow.h \
	BeOSMedia.cxx BeOSMedia.h SGIPlatformFactory.cxx \
	SGIPlatformFactory.h SGIDisplay.cxx SGIDisplay.h SGIMedia.cxx \
	SGIMedia.h XDisplay.cxx XDisplay.h XVisual.cxx XVisual.h \
	XWindow.cxx XWindow.h EvdevJoystick.cxx EvdevJoystick.h \
	LinuxPlatformFactory.cxx LinuxPlatformFactory.h \
	LinuxDisplay.cxx LinuxDisplay.h LinuxMedia.cxx LinuxMedia.h \
	USBJoystick.cxx USBJoystick.h XIJoystick.cxx XIJoystick.h \
	SolarisPlatformFactory.cxx SolarisPlatformFactory.h \
	SolarisMedia.cxx SolarisMedia.h WinPlatformFactory.cxx \
	WinPlatformFactory.h WinDisplay.cxx WinDisplay.h \
	DXJoystick.cxx DXJoystick.h WinJoystick.cxx WinJoystick.h \
	WinVisual.cxx WinVisual.h WinWindow.cxx WinWindow.h \
	WinMedia.cxx WinMedia.h
##am__objects_1 = SDLJoystick.lo \
##	SDLPlatformFactory.lo SDLMedia.lo
###am__objects_2 =  \
###	SDL2Display.lo \
###	SDL2Visual.lo \
###	SDL2Window.lo
##am__objects_3 =  \
##	SDLMain.lo \
##	SDLDisplay.lo
#am__objects_4 = SDLJoystick.lo \
#	SDLPlatformFactory.lo SDLMedia.lo
##am__objects_5 =  \
##	SDL2Display.lo \
##	SDL2Visual.lo \
##	SDL2Window.lo
#am__objects_6 =  \
#	SDLDisplay.lo
am__objects_7 = wave.lo \
	LinuxPlatformFactory.lo \
	LinuxDisplay.lo LinuxMedia.lo \
	USBJoystick.lo XIJoystick.lo \
	XDisplay.lo XVisual.lo XWindow.lo
##am_libPlatform_la_OBJECTS = PlatformFactory.lo \
##	BzfDisplay.lo \
##	BzfJoystick.lo \
##	BzfVisual.lo \
##	BzfWindow.lo \
##	BzfMedia.lo \
##	SDLDisplay.lo \
##	SDLJoystick.lo \
##	SDLMedia.lo \
##	wave.lo \
##	WinPlatformFactory.lo \
##	WinDisplay.lo \
##	DXJoystick.lo \
##	WinJoystick.lo \
##	WinVisual.lo \
##	WinWindow.lo \
##	WinMedia.lo \
##	$(am__objects_1) \
##	$(am__objects_2) \
##	$(am__objects_3)
##am_libPlatform_la_OBJECTS = PlatformFactory.lo \
##	BzfDisplay.lo \
##	BzfJoystick.lo \
##	BzfVisual.lo \
##	BzfWindow.lo \
##	BzfMedia.lo \
##	wave.lo \
##	SolarisPlatformFactory.lo \
##	SolarisMedia.lo \
##	XDisplay.lo \
##	XVisual.lo \
##	XWindow.lo \
##	$(am__objects_1) \
##	$(am__objects_2) \
##	$(am__objects_3)
am_libPlatform_la_OBJECTS = PlatformFactory.lo \
	BzfDisplay.lo \
	BzfJoystick.lo \
	BzfVisual.lo \
	BzfWindow.lo \
	BzfMedia.lo \
	EvdevJoystick.lo \
	$(am__objects_4) \
	$(am__objects_5) \
	$(am__objects_6) \
	$(am__objects_7) \
	$(am__objects_1) \
	$(am__objects_2) \
	$(am__objects_3)
#am_libPlatform_la_OBJECTS =  \
#	PlatformFactory.lo \
#	BzfDisplay.lo \
#	BzfJoystick.lo \
#	BzfVisual.lo BzfWindow.lo \
#	BzfMedia.lo wave.lo \
#	SGIPlatformFactory.lo \
#	SGIDisplay.lo SGIMedia.lo \
#	XDisplay.lo XVisual.lo \
#	XWindow.lo \
#	$(am__objects_1) \
#	$(am__objects_2) \
#	$(am__objects_3)
#am_libPlatform_la_OBJECTS =  \
#	PlatformFactory.lo BzfDisplay.lo \
#	BzfJoystick.lo BzfVisual.lo \
#	BzfWindow.lo BzfMedia.lo wave.lo \
#	BeOSPlatformFactory.lo BeOSDisplay.lo \
#	BeOSVisual.lo BeOSWindow.lo \
#	BeOSMedia.lo $(am__objects_1) \
#	$(am__objects_2) $(am__objects_3)
#am_libPlatform_la_OBJECTS = PlatformFactory.lo \
#	BzfDisplay.lo BzfJoystick.lo BzfVisual.lo \
#	BzfWindow.lo BzfMedia.lo wave.lo MacDataPath.lo \
#	$(am__objects_1) $(am__objects_2) $(am__objects_3)
libPlatform_la_OBJECTS = $(am_libPlatform_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libPlatform_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libPlatform_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_libPlatform_la_rpath =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/misc/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/BeOSDisplay.Plo \
	./$(DEPDIR)/BeOSMedia.Plo ./$(DEPDIR)/BeOSPlatformFactory.Plo \
	./$(DEPDIR)/BeOSVisual.Plo ./$(DEPDIR)/BeOSWindow.Plo \
	./$(DEPDIR)/BeOSWindow2.Plo ./$(DEPDIR)/BzfDisplay.Plo \
	./$(DEPDIR)/BzfJoystick.Plo ./$(DEPDIR)/BzfMedia.Plo \
	./$(DEPDIR)/BzfVisual.Plo ./$(DEPDIR)/BzfWindow.Plo \
	./$(DEPDIR)/DXJoystick.Plo ./$(DEPDIR)/EvdevJoystick.Plo \
	./$(DEPDIR)/LinuxDisplay.Plo ./$(DEPDIR)/LinuxMedia.Plo \
	./$(DEPDIR)/LinuxPlatformFactory.Plo \
	./$(DEPDIR)/MacDataPath.Plo ./$(DEPDIR)/PlatformFactory.Plo \
	./$(DEPDIR)/SDL2Display.Plo ./$(DEPDIR)/SDL2Visual.Plo \
	./$(DEPDIR)/SDL2Window.Plo ./$(DEPDIR)/SDLDisplay.Plo \
	./$(DEPDIR)/SDLJoystick.Plo ./$(DEPDIR)/SDLMain.Plo \
	./$(DEPDIR)/SDLMedia.Plo ./$(DEPDIR)/SDLPlatformFactory.Plo \
	./$(DEPDIR)/SGIDisplay.Plo ./$(DEPDIR)/SGIMedia.Plo \
	./$(DEPDIR)/SGIPlatformFactory.Plo \
	./$(DEPDIR)/SolarisMedia.Plo \
	./$(DEPDIR)/SolarisPlatformFactory.Plo \
	./$(DEPDIR)/USBJoystick.Plo ./$(DEPDIR)/WinDisplay.Plo \
	./$(DEPDIR)/WinJoystick.Plo ./$(DEPDIR)/WinMedia.Plo \
	./$(DEPDIR)/WinPlatformFactory.Plo ./$(DEPDIR)/WinVisual.Plo \
	./$(DEPDIR)/WinWindow.Plo ./$(DEPDIR)/XDisplay.Plo \
	./$(DEPDIR)/XIJoystick.Plo ./$(DEPDIR)/XVisual.Plo \
	./$(DEPDIR)/XWindow.Plo ./$(DEPDIR)/wave.Plo
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
OBJCCOMPILE = $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS)
LTOBJCCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_OBJCFLAGS) $(OBJCFLAGS)
AM_V_OBJC = $(am__v_OBJC_$(V))
am__v_OBJC_ = $(am__v_OBJC_$(AM_DEFAULT_VERBOSITY))
am__v_OBJC_0 = @echo "  OBJC    " $@;
am__v_OBJC_1 = 
OBJCLD = $(OBJC)
OBJCLINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCLD) $(AM_OBJCFLAGS) $(OBJCFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_OBJCLD = $(am__v_OBJCLD_$(V))
am__v_OBJCLD_ = $(am__v_OBJCLD_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCLD_0 = @echo "  OBJCLD  " $@;
am__v_OBJCLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libPlatform_la_SOURCES) $(EXTRA_libPlatform_la_SOURCES)
DIST_SOURCES = $(am__libPlatform_la_SOURCES_DIST) \
	$(EXTRA_libPlatform_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/misc/depcomp \
	README
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/quinn/Documents/MyBZFlag/bzflag-grue/misc/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AR_FLAGS = cr
AUTOCONF = ${SHELL} /home/quinn/Documents/MyBZFlag/bzflag-grue/misc/missing autoconf
AUTOHEADER = ${SHELL} /home/quinn/Documents/MyBZFlag/bzflag-grue/misc/missing autoheader
AUTOMAKE = ${SHELL} /home/quinn/Documents/MyBZFlag/bzflag-grue/misc/missing automake-1.16
AWK = gawk
BUILD_DATE = 2023-01-05
BZFLAG_DATA = /usr/local/share/bzflag
CC = gcc
CCACHE = 
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CONFIG = 
CONFIG_CACHE = config.cache.linux-gnu.quinn-desktop
CONF_CFLAGS =  -Wall -Wextra -Wcast-qual -Wredundant-decls -Wshadow -Wundef -pedantic -mtune=native -fexpensive-optimizations
CONF_CPPFLAGS =  
CONF_CXXFLAGS =  -Wall -Wextra -Wcast-qual -Wredundant-decls -Wshadow -Wundef -pedantic -mtune=native -fsigned-char -fexpensive-optimizations
CPP = gcc -E
CPPFLAGS = 
CURSES_LIB = 
CUSTOM_PLUGIN_LIST = ctfOverseer
CXX = g++ -std=gnu++11
CXXCPP = g++ -std=gnu++11 -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO = printf %s\n
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GLIBS =  -lX11  
GREP = /bin/grep
HASPOD2MAN = yes
HAVE_CXX11 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBCARES = -lcares
LIBCURL = -lcurl
LIBCURL_CPPFLAGS = 
LIBDIR = $(top_srcdir)/lib
LIBDL = -ldl
LIBMINIUPNPC = 
LIBOBJS = 
LIBPTHREAD = -lpthread
LIBREGEX = -lc
LIBRT = -lrt
LIBS = -lm  -lpthread
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBTOOLFLAGS = --silent
LIBTOOL_DEPS = misc/ltmain.sh
LIBZ = -lz
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/quinn/Documents/MyBZFlag/bzflag-grue/misc/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJC = 
OBJCDEPMODE = 
OBJCFLAGS = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = bzflag
PACKAGE_BUGREPORT = http://BZFlag.org/
PACKAGE_NAME = BZFlag
PACKAGE_STRING = BZFlag 2.4.25
PACKAGE_TARNAME = bzflag
PACKAGE_URL = 
PACKAGE_VERSION = 2.4.25
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SDL2_CONFIG = no
SDL_CFLAGS = 
SDL_CONFIG = 
SDL_LIBS = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 2.4.25
WINDRES = :
_libcurl_config = 
abs_builddir = /home/quinn/Documents/MyBZFlag/bzflag-grue/src/platform
abs_srcdir = /home/quinn/Documents/MyBZFlag/bzflag-grue/src/platform
abs_top_builddir = /home/quinn/Documents/MyBZFlag/bzflag-grue
abs_top_srcdir = /home/quinn/Documents/MyBZFlag/bzflag-grue
ac_ct_AR = 
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_OBJC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/quinn/Documents/MyBZFlag/bzflag-grue/misc/install-sh
libdir = ${exec_prefix}/lib/bzflag
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
ncurses_CFLAGS = 
ncurses_LIBS = 
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
#noinst_LTLIBRARIES = libPlatform.la
libPlatform_la_LDFLAGS = -static
#libPlatform_la_SOURCES = PlatformFactory.cxx \
#	BzfDisplay.cxx BzfJoystick.cxx BzfVisual.cxx \
#	BzfWindow.cxx BzfMedia.cxx wave.cxx wave.h \
#	MacDataPath.cxx $(am__append_5) $(am__append_6) \
#	$(am__append_7)
#libPlatform_la_SOURCES = PlatformFactory.cxx BzfDisplay.cxx \
#	BzfJoystick.cxx BzfVisual.cxx BzfWindow.cxx \
#	BzfMedia.cxx wave.cxx wave.h \
#	BeOSPlatformFactory.cxx BeOSPlatformFactory.h \
#	BeOSDisplay.cxx BeOSDisplay.h BeOSVisual.cxx \
#	BeOSVisual.h BeOSWindow.cxx BeOSWindow.h \
#	BeOSMedia.cxx BeOSMedia.h $(am__append_5) \
#	$(am__append_6) $(am__append_7)
#libPlatform_la_SOURCES = PlatformFactory.cxx BzfDisplay.cxx \
#	BzfJoystick.cxx BzfVisual.cxx BzfWindow.cxx \
#	BzfMedia.cxx wave.cxx wave.h SGIPlatformFactory.cxx \
#	SGIPlatformFactory.h SGIDisplay.cxx SGIDisplay.h \
#	SGIMedia.cxx SGIMedia.h XDisplay.cxx XDisplay.h \
#	XVisual.cxx XVisual.h XWindow.cxx XWindow.h \
#	$(am__append_5) $(am__append_6) $(am__append_7)
libPlatform_la_SOURCES = PlatformFactory.cxx \
	BzfDisplay.cxx BzfJoystick.cxx BzfVisual.cxx \
	BzfWindow.cxx BzfMedia.cxx EvdevJoystick.cxx \
	EvdevJoystick.h $(am__append_1) $(am__append_2) \
	$(am__append_3) $(am__append_4) $(am__append_5) \
	$(am__append_6) $(am__append_7)
#libPlatform_la_SOURCES = PlatformFactory.cxx \
#	BzfDisplay.cxx BzfJoystick.cxx BzfVisual.cxx \
#	BzfWindow.cxx BzfMedia.cxx wave.cxx wave.h \
#	SolarisPlatformFactory.cxx \
#	SolarisPlatformFactory.h SolarisMedia.cxx \
#	SolarisMedia.h XDisplay.cxx XDisplay.h \
#	XVisual.cxx XVisual.h XWindow.cxx XWindow.h \
#	$(am__append_5) $(am__append_6) $(am__append_7)
#libPlatform_la_SOURCES = PlatformFactory.cxx \
#	BzfDisplay.cxx BzfJoystick.cxx BzfVisual.cxx \
#	BzfWindow.cxx BzfMedia.cxx SDLDisplay.h \
#	SDLDisplay.cxx SDLJoystick.h SDLJoystick.cxx \
#	SDLMedia.cxx SDLMedia.h wave.cxx wave.h \
#	WinPlatformFactory.cxx WinPlatformFactory.h \
#	WinDisplay.cxx WinDisplay.h DXJoystick.cxx \
#	DXJoystick.h WinJoystick.cxx WinJoystick.h \
#	WinVisual.cxx WinVisual.h WinWindow.cxx \
#	WinWindow.h WinMedia.cxx WinMedia.h \
#	$(am__append_5) $(am__append_6) $(am__append_7)
EXTRA_libPlatform_la_SOURCES = \
	BeOSPlatformFactory.cxx		\
	BeOSPlatformFactory.h		\
	BeOSDisplay.cxx			\
	BeOSDisplay.h			\
	BeOSVisual.cxx			\
	BeOSVisual.h			\
	BeOSWindow.cxx			\
	BeOSWindow.h			\
	BeOSWindow2.cxx			\
	BeOSMedia.cxx			\
	BeOSMedia.h			\
	LinuxPlatformFactory.cxx	\
	LinuxPlatformFactory.h		\
	LinuxDisplay.cxx		\
	LinuxDisplay.h			\
	LinuxMedia.cxx			\
	LinuxMedia.h			\
	MacDataPath.cxx			\
	SDLJoystick.cxx			\
	SDLJoystick.h			\
	EvdevJoystick.cxx		\
	EvdevJoystick.h			\
	SDLPlatformFactory.cxx		\
	SDLPlatformFactory.h		\
	SDLMedia.cxx			\
	SDLMedia.h			\
	SDLDisplay.h			\
	SDLDisplay.cxx			\
	SGIPlatformFactory.cxx		\
	SGIPlatformFactory.h		\
	SGIDisplay.cxx			\
	SGIDisplay.h			\
	SGIMedia.cxx			\
	SGIMedia.h			\
	SolarisPlatformFactory.cxx	\
	SolarisPlatformFactory.h	\
	SolarisMedia.cxx		\
	SolarisMedia.h			\
	USBJoystick.cxx			\
	USBJoystick.h			\
	WinPlatformFactory.cxx		\
	WinPlatformFactory.h		\
	WinDisplay.cxx			\
	WinDisplay.h			\
	WinJoystick.cxx			\
	WinJoystick.h			\
	WinVisual.cxx			\
	WinVisual.h			\
	WinWindow.cxx			\
	WinWindow.h			\
	WinMedia.cxx			\
	WinMedia.h			\
	XDisplay.cxx			\
	XDisplay.h			\
	XIJoystick.cxx			\
	XIJoystick.h			\
	XVisual.cxx			\
	XVisual.h			\
	XWindow.cxx			\
	XWindow.h			\
	wave.cxx			\
	wave.h

AM_CPPFLAGS = -DINSTALL_DATA_DIR=\"$(pkgdatadir)\" \
	$(SDL_CFLAGS) \
	$(CONF_CPPFLAGS) \
	-I$(top_srcdir)/include

AM_CFLAGS = $(CONF_CFLAGS)
AM_CXXFLAGS = $(CONF_CXXFLAGS)
EXTRA_DIST = \
	NewMedia.cxx \
	NewMedia.h \
	SDLMain.h \
	SDLMain.m \
	README

MAINTAINERCLEANFILES = \
	Makefile.in

all: all-am

.SUFFIXES:
.SUFFIXES: .cxx .lo .m .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/platform/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/platform/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libPlatform.la: $(libPlatform_la_OBJECTS) $(libPlatform_la_DEPENDENCIES) $(EXTRA_libPlatform_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libPlatform_la_LINK) $(am_libPlatform_la_rpath) $(libPlatform_la_OBJECTS) $(libPlatform_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/BeOSDisplay.Plo # am--include-marker
include ./$(DEPDIR)/BeOSMedia.Plo # am--include-marker
include ./$(DEPDIR)/BeOSPlatformFactory.Plo # am--include-marker
include ./$(DEPDIR)/BeOSVisual.Plo # am--include-marker
include ./$(DEPDIR)/BeOSWindow.Plo # am--include-marker
include ./$(DEPDIR)/BeOSWindow2.Plo # am--include-marker
include ./$(DEPDIR)/BzfDisplay.Plo # am--include-marker
include ./$(DEPDIR)/BzfJoystick.Plo # am--include-marker
include ./$(DEPDIR)/BzfMedia.Plo # am--include-marker
include ./$(DEPDIR)/BzfVisual.Plo # am--include-marker
include ./$(DEPDIR)/BzfWindow.Plo # am--include-marker
include ./$(DEPDIR)/DXJoystick.Plo # am--include-marker
include ./$(DEPDIR)/EvdevJoystick.Plo # am--include-marker
include ./$(DEPDIR)/LinuxDisplay.Plo # am--include-marker
include ./$(DEPDIR)/LinuxMedia.Plo # am--include-marker
include ./$(DEPDIR)/LinuxPlatformFactory.Plo # am--include-marker
include ./$(DEPDIR)/MacDataPath.Plo # am--include-marker
include ./$(DEPDIR)/PlatformFactory.Plo # am--include-marker
include ./$(DEPDIR)/SDL2Display.Plo # am--include-marker
include ./$(DEPDIR)/SDL2Visual.Plo # am--include-marker
include ./$(DEPDIR)/SDL2Window.Plo # am--include-marker
include ./$(DEPDIR)/SDLDisplay.Plo # am--include-marker
include ./$(DEPDIR)/SDLJoystick.Plo # am--include-marker
include ./$(DEPDIR)/SDLMain.Plo # am--include-marker
include ./$(DEPDIR)/SDLMedia.Plo # am--include-marker
include ./$(DEPDIR)/SDLPlatformFactory.Plo # am--include-marker
include ./$(DEPDIR)/SGIDisplay.Plo # am--include-marker
include ./$(DEPDIR)/SGIMedia.Plo # am--include-marker
include ./$(DEPDIR)/SGIPlatformFactory.Plo # am--include-marker
include ./$(DEPDIR)/SolarisMedia.Plo # am--include-marker
include ./$(DEPDIR)/SolarisPlatformFactory.Plo # am--include-marker
include ./$(DEPDIR)/USBJoystick.Plo # am--include-marker
include ./$(DEPDIR)/WinDisplay.Plo # am--include-marker
include ./$(DEPDIR)/WinJoystick.Plo # am--include-marker
include ./$(DEPDIR)/WinMedia.Plo # am--include-marker
include ./$(DEPDIR)/WinPlatformFactory.Plo # am--include-marker
include ./$(DEPDIR)/WinVisual.Plo # am--include-marker
include ./$(DEPDIR)/WinWindow.Plo # am--include-marker
include ./$(DEPDIR)/XDisplay.Plo # am--include-marker
include ./$(DEPDIR)/XIJoystick.Plo # am--include-marker
include ./$(DEPDIR)/XVisual.Plo # am--include-marker
include ./$(DEPDIR)/XWindow.Plo # am--include-marker
include ./$(DEPDIR)/wave.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cxx.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

.m.o:
#	$(AM_V_OBJC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
#	$(OBJCCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
	$(AM_V_OBJC)source='$<' object='$@' libtool=no \
	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
	$(AM_V_OBJC_no)$(OBJCCOMPILE) -c -o $@ $<

.m.obj:
#	$(AM_V_OBJC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
#	$(OBJCCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
	$(AM_V_OBJC)source='$<' object='$@' libtool=no \
	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
	$(AM_V_OBJC_no)$(OBJCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.m.lo:
#	$(AM_V_OBJC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
#	$(LTOBJCCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Plo
	$(AM_V_OBJC)source='$<' object='$@' libtool=yes \
	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
	$(AM_V_OBJC_no)$(LTOBJCCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/BeOSDisplay.Plo
	-rm -f ./$(DEPDIR)/BeOSMedia.Plo
	-rm -f ./$(DEPDIR)/BeOSPlatformFactory.Plo
	-rm -f ./$(DEPDIR)/BeOSVisual.Plo
	-rm -f ./$(DEPDIR)/BeOSWindow.Plo
	-rm -f ./$(DEPDIR)/BeOSWindow2.Plo
	-rm -f ./$(DEPDIR)/BzfDisplay.Plo
	-rm -f ./$(DEPDIR)/BzfJoystick.Plo
	-rm -f ./$(DEPDIR)/BzfMedia.Plo
	-rm -f ./$(DEPDIR)/BzfVisual.Plo
	-rm -f ./$(DEPDIR)/BzfWindow.Plo
	-rm -f ./$(DEPDIR)/DXJoystick.Plo
	-rm -f ./$(DEPDIR)/EvdevJoystick.Plo
	-rm -f ./$(DEPDIR)/LinuxDisplay.Plo
	-rm -f ./$(DEPDIR)/LinuxMedia.Plo
	-rm -f ./$(DEPDIR)/LinuxPlatformFactory.Plo
	-rm -f ./$(DEPDIR)/MacDataPath.Plo
	-rm -f ./$(DEPDIR)/PlatformFactory.Plo
	-rm -f ./$(DEPDIR)/SDL2Display.Plo
	-rm -f ./$(DEPDIR)/SDL2Visual.Plo
	-rm -f ./$(DEPDIR)/SDL2Window.Plo
	-rm -f ./$(DEPDIR)/SDLDisplay.Plo
	-rm -f ./$(DEPDIR)/SDLJoystick.Plo
	-rm -f ./$(DEPDIR)/SDLMain.Plo
	-rm -f ./$(DEPDIR)/SDLMedia.Plo
	-rm -f ./$(DEPDIR)/SDLPlatformFactory.Plo
	-rm -f ./$(DEPDIR)/SGIDisplay.Plo
	-rm -f ./$(DEPDIR)/SGIMedia.Plo
	-rm -f ./$(DEPDIR)/SGIPlatformFactory.Plo
	-rm -f ./$(DEPDIR)/SolarisMedia.Plo
	-rm -f ./$(DEPDIR)/SolarisPlatformFactory.Plo
	-rm -f ./$(DEPDIR)/USBJoystick.Plo
	-rm -f ./$(DEPDIR)/WinDisplay.Plo
	-rm -f ./$(DEPDIR)/WinJoystick.Plo
	-rm -f ./$(DEPDIR)/WinMedia.Plo
	-rm -f ./$(DEPDIR)/WinPlatformFactory.Plo
	-rm -f ./$(DEPDIR)/WinVisual.Plo
	-rm -f ./$(DEPDIR)/WinWindow.Plo
	-rm -f ./$(DEPDIR)/XDisplay.Plo
	-rm -f ./$(DEPDIR)/XIJoystick.Plo
	-rm -f ./$(DEPDIR)/XVisual.Plo
	-rm -f ./$(DEPDIR)/XWindow.Plo
	-rm -f ./$(DEPDIR)/wave.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/BeOSDisplay.Plo
	-rm -f ./$(DEPDIR)/BeOSMedia.Plo
	-rm -f ./$(DEPDIR)/BeOSPlatformFactory.Plo
	-rm -f ./$(DEPDIR)/BeOSVisual.Plo
	-rm -f ./$(DEPDIR)/BeOSWindow.Plo
	-rm -f ./$(DEPDIR)/BeOSWindow2.Plo
	-rm -f ./$(DEPDIR)/BzfDisplay.Plo
	-rm -f ./$(DEPDIR)/BzfJoystick.Plo
	-rm -f ./$(DEPDIR)/BzfMedia.Plo
	-rm -f ./$(DEPDIR)/BzfVisual.Plo
	-rm -f ./$(DEPDIR)/BzfWindow.Plo
	-rm -f ./$(DEPDIR)/DXJoystick.Plo
	-rm -f ./$(DEPDIR)/EvdevJoystick.Plo
	-rm -f ./$(DEPDIR)/LinuxDisplay.Plo
	-rm -f ./$(DEPDIR)/LinuxMedia.Plo
	-rm -f ./$(DEPDIR)/LinuxPlatformFactory.Plo
	-rm -f ./$(DEPDIR)/MacDataPath.Plo
	-rm -f ./$(DEPDIR)/PlatformFactory.Plo
	-rm -f ./$(DEPDIR)/SDL2Display.Plo
	-rm -f ./$(DEPDIR)/SDL2Visual.Plo
	-rm -f ./$(DEPDIR)/SDL2Window.Plo
	-rm -f ./$(DEPDIR)/SDLDisplay.Plo
	-rm -f ./$(DEPDIR)/SDLJoystick.Plo
	-rm -f ./$(DEPDIR)/SDLMain.Plo
	-rm -f ./$(DEPDIR)/SDLMedia.Plo
	-rm -f ./$(DEPDIR)/SDLPlatformFactory.Plo
	-rm -f ./$(DEPDIR)/SGIDisplay.Plo
	-rm -f ./$(DEPDIR)/SGIMedia.Plo
	-rm -f ./$(DEPDIR)/SGIPlatformFactory.Plo
	-rm -f ./$(DEPDIR)/SolarisMedia.Plo
	-rm -f ./$(DEPDIR)/SolarisPlatformFactory.Plo
	-rm -f ./$(DEPDIR)/USBJoystick.Plo
	-rm -f ./$(DEPDIR)/WinDisplay.Plo
	-rm -f ./$(DEPDIR)/WinJoystick.Plo
	-rm -f ./$(DEPDIR)/WinMedia.Plo
	-rm -f ./$(DEPDIR)/WinPlatformFactory.Plo
	-rm -f ./$(DEPDIR)/WinVisual.Plo
	-rm -f ./$(DEPDIR)/WinWindow.Plo
	-rm -f ./$(DEPDIR)/XDisplay.Plo
	-rm -f ./$(DEPDIR)/XIJoystick.Plo
	-rm -f ./$(DEPDIR)/XVisual.Plo
	-rm -f ./$(DEPDIR)/XWindow.Plo
	-rm -f ./$(DEPDIR)/wave.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libtool clean-noinstLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
