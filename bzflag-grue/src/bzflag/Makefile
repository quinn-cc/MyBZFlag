# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/bzflag/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/bzflag
pkgincludedir = $(includedir)/bzflag
pkglibdir = $(libdir)/bzflag
pkglibexecdir = $(libexecdir)/bzflag
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = bzflag$(EXEEXT)
subdir = src/bzflag
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/cache.m4 \
	$(top_srcdir)/m4/curses.m4 $(top_srcdir)/m4/isnan.m4 \
	$(top_srcdir)/m4/libcurl.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/m4_ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/m4_ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/m4/sdl.m4 $(top_srcdir)/m4/sdl2.m4 \
	$(top_srcdir)/m4/stage.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_bzflag_OBJECTS = ActionBinding.$(OBJEXT) AutoPilot.$(OBJEXT) \
	BackgroundRenderer.$(OBJEXT) BaseLocalPlayer.$(OBJEXT) \
	CacheMenu.$(OBJEXT) clientConfig.$(OBJEXT) \
	CommandsImplementation.$(OBJEXT) ComposeDefaultKey.$(OBJEXT) \
	ControlPanel.$(OBJEXT) defaultBZDB.$(OBJEXT) \
	DisplayMenu.$(OBJEXT) Downloads.$(OBJEXT) \
	EffectsMenu.$(OBJEXT) effectsRenderer.$(OBJEXT) \
	EntryZone.$(OBJEXT) FlashClock.$(OBJEXT) \
	ForceFeedback.$(OBJEXT) FormatMenu.$(OBJEXT) \
	GuidedMissleStrategy.$(OBJEXT) GUIOptionsMenu.$(OBJEXT) \
	HelpMenu.$(OBJEXT) HUDDialog.$(OBJEXT) \
	HUDDialogStack.$(OBJEXT) HUDRenderer.$(OBJEXT) HUDui.$(OBJEXT) \
	HUDuiControl.$(OBJEXT) HUDuiDefaultKey.$(OBJEXT) \
	HUDuiLabel.$(OBJEXT) HUDuiList.$(OBJEXT) \
	HUDuiTextureLabel.$(OBJEXT) HUDuiTypeIn.$(OBJEXT) \
	JoinMenu.$(OBJEXT) InputMenu.$(OBJEXT) \
	KeyboardMapMenu.$(OBJEXT) LocalCommand.$(OBJEXT) \
	LocalPlayer.$(OBJEXT) MainMenu.$(OBJEXT) MainWindow.$(OBJEXT) \
	MenuDefaultKey.$(OBJEXT) motd.$(OBJEXT) \
	NewVersionMenu.$(OBJEXT) OptionsMenu.$(OBJEXT) \
	Player.$(OBJEXT) Plan.$(OBJEXT) QuickKeysMenu.$(OBJEXT) \
	QuitMenu.$(OBJEXT) RadarRenderer.$(OBJEXT) Region.$(OBJEXT) \
	RegionPriorityQueue.$(OBJEXT) RemotePlayer.$(OBJEXT) \
	Roaming.$(OBJEXT) RobotPlayer.$(OBJEXT) RoofTops.$(OBJEXT) \
	Roster.$(OBJEXT) SaveWorldMenu.$(OBJEXT) \
	SceneBuilder.$(OBJEXT) SceneRenderer.$(OBJEXT) \
	ScoreboardRenderer.$(OBJEXT) SegmentedShotStrategy.$(OBJEXT) \
	ServerCommandKey.$(OBJEXT) ServerLink.$(OBJEXT) \
	ServerListFilter.$(OBJEXT) ServerListFilterHelpMenu.$(OBJEXT) \
	ServerListFilterMenu.$(OBJEXT) ServerMenu.$(OBJEXT) \
	ServerStartMenu.$(OBJEXT) ShockWaveStrategy.$(OBJEXT) \
	ShotPath.$(OBJEXT) ShotPathSegment.$(OBJEXT) \
	ShotStats.$(OBJEXT) ShotStatsDefaultKey.$(OBJEXT) \
	ShotStatistics.$(OBJEXT) ShotStrategy.$(OBJEXT) \
	SilenceDefaultKey.$(OBJEXT) TargetingUtils.$(OBJEXT) \
	TrackMarks.$(OBJEXT) Weapon.$(OBJEXT) \
	WeatherRenderer.$(OBJEXT) World.$(OBJEXT) \
	WorldBuilder.$(OBJEXT) WorldPlayer.$(OBJEXT) bzflag.$(OBJEXT) \
	callbacks.$(OBJEXT) clientCommands.$(OBJEXT) \
	daylight.$(OBJEXT) playing.$(OBJEXT) sound.$(OBJEXT) \
	stars.$(OBJEXT)
bzflag_OBJECTS = $(am_bzflag_OBJECTS)
bzflag_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
#am__DEPENDENCIES_2 = bzflag.res
bzflag_DEPENDENCIES = ../3D/lib3D.la ../game/libGame.la \
	../net/libNet.la ../obstacle/libObstacle.la \
	../platform/libPlatform.la ../ogl/libGLKit.la \
	../scene/libSceneDB.la ../geometry/libGeometry.la \
	../mediafile/libMediaFile.la ../common/libCommon.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../date/libDate.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/misc/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/ActionBinding.Po \
	./$(DEPDIR)/AutoPilot.Po ./$(DEPDIR)/BackgroundRenderer.Po \
	./$(DEPDIR)/BaseLocalPlayer.Po ./$(DEPDIR)/CacheMenu.Po \
	./$(DEPDIR)/CommandsImplementation.Po \
	./$(DEPDIR)/ComposeDefaultKey.Po ./$(DEPDIR)/ControlPanel.Po \
	./$(DEPDIR)/DisplayMenu.Po ./$(DEPDIR)/Downloads.Po \
	./$(DEPDIR)/EffectsMenu.Po ./$(DEPDIR)/EntryZone.Po \
	./$(DEPDIR)/FlashClock.Po ./$(DEPDIR)/ForceFeedback.Po \
	./$(DEPDIR)/FormatMenu.Po ./$(DEPDIR)/GUIOptionsMenu.Po \
	./$(DEPDIR)/GuidedMissleStrategy.Po ./$(DEPDIR)/HUDDialog.Po \
	./$(DEPDIR)/HUDDialogStack.Po ./$(DEPDIR)/HUDRenderer.Po \
	./$(DEPDIR)/HUDui.Po ./$(DEPDIR)/HUDuiControl.Po \
	./$(DEPDIR)/HUDuiDefaultKey.Po ./$(DEPDIR)/HUDuiLabel.Po \
	./$(DEPDIR)/HUDuiList.Po ./$(DEPDIR)/HUDuiTextureLabel.Po \
	./$(DEPDIR)/HUDuiTypeIn.Po ./$(DEPDIR)/HelpMenu.Po \
	./$(DEPDIR)/InputMenu.Po ./$(DEPDIR)/JoinMenu.Po \
	./$(DEPDIR)/KeyboardMapMenu.Po ./$(DEPDIR)/LocalCommand.Po \
	./$(DEPDIR)/LocalPlayer.Po ./$(DEPDIR)/MainMenu.Po \
	./$(DEPDIR)/MainWindow.Po ./$(DEPDIR)/MenuDefaultKey.Po \
	./$(DEPDIR)/NewVersionMenu.Po ./$(DEPDIR)/OptionsMenu.Po \
	./$(DEPDIR)/Plan.Po ./$(DEPDIR)/Player.Po \
	./$(DEPDIR)/QuickKeysMenu.Po ./$(DEPDIR)/QuitMenu.Po \
	./$(DEPDIR)/RadarRenderer.Po ./$(DEPDIR)/Region.Po \
	./$(DEPDIR)/RegionPriorityQueue.Po ./$(DEPDIR)/RemotePlayer.Po \
	./$(DEPDIR)/Roaming.Po ./$(DEPDIR)/RobotPlayer.Po \
	./$(DEPDIR)/RoofTops.Po ./$(DEPDIR)/Roster.Po \
	./$(DEPDIR)/SaveWorldMenu.Po ./$(DEPDIR)/SceneBuilder.Po \
	./$(DEPDIR)/SceneRenderer.Po ./$(DEPDIR)/ScoreboardRenderer.Po \
	./$(DEPDIR)/SegmentedShotStrategy.Po \
	./$(DEPDIR)/ServerCommandKey.Po ./$(DEPDIR)/ServerLink.Po \
	./$(DEPDIR)/ServerListFilter.Po \
	./$(DEPDIR)/ServerListFilterHelpMenu.Po \
	./$(DEPDIR)/ServerListFilterMenu.Po ./$(DEPDIR)/ServerMenu.Po \
	./$(DEPDIR)/ServerStartMenu.Po \
	./$(DEPDIR)/ShockWaveStrategy.Po ./$(DEPDIR)/ShotPath.Po \
	./$(DEPDIR)/ShotPathSegment.Po ./$(DEPDIR)/ShotStatistics.Po \
	./$(DEPDIR)/ShotStats.Po ./$(DEPDIR)/ShotStatsDefaultKey.Po \
	./$(DEPDIR)/ShotStrategy.Po ./$(DEPDIR)/SilenceDefaultKey.Po \
	./$(DEPDIR)/TargetingUtils.Po ./$(DEPDIR)/TrackMarks.Po \
	./$(DEPDIR)/Weapon.Po ./$(DEPDIR)/WeatherRenderer.Po \
	./$(DEPDIR)/World.Po ./$(DEPDIR)/WorldBuilder.Po \
	./$(DEPDIR)/WorldPlayer.Po ./$(DEPDIR)/bzflag.Po \
	./$(DEPDIR)/callbacks.Po ./$(DEPDIR)/clientCommands.Po \
	./$(DEPDIR)/clientConfig.Po ./$(DEPDIR)/daylight.Po \
	./$(DEPDIR)/defaultBZDB.Po ./$(DEPDIR)/effectsRenderer.Po \
	./$(DEPDIR)/motd.Po ./$(DEPDIR)/playing.Po \
	./$(DEPDIR)/sound.Po ./$(DEPDIR)/stars.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(bzflag_SOURCES)
DIST_SOURCES = $(bzflag_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/misc/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/quinn/Documents/MyBZFlag/bzflag-grue/misc/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AR_FLAGS = cr
AUTOCONF = ${SHELL} /home/quinn/Documents/MyBZFlag/bzflag-grue/misc/missing autoconf
AUTOHEADER = ${SHELL} /home/quinn/Documents/MyBZFlag/bzflag-grue/misc/missing autoheader
AUTOMAKE = ${SHELL} /home/quinn/Documents/MyBZFlag/bzflag-grue/misc/missing automake-1.16
AWK = gawk
BUILD_DATE = 2022-12-21
BZFLAG_DATA = /usr/local/share/bzflag
CC = gcc
CCACHE = 
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CONFIG = 
CONFIG_CACHE = config.cache.linux-gnu.quinn-desktop
CONF_CFLAGS =  -Wall -Wextra -Wcast-qual -Wredundant-decls -Wshadow -Wundef -pedantic -mtune=native -fexpensive-optimizations
CONF_CPPFLAGS =  
CONF_CXXFLAGS =  -Wall -Wextra -Wcast-qual -Wredundant-decls -Wshadow -Wundef -pedantic -mtune=native -fsigned-char -fexpensive-optimizations
CPP = gcc -E
CPPFLAGS = 
CURSES_LIB = 
CUSTOM_PLUGIN_LIST = teamFlagGeno
CXX = g++ -std=gnu++11
CXXCPP = g++ -std=gnu++11 -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO = printf %s\n
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GLIBS =  -lX11  
GREP = /bin/grep
HASPOD2MAN = yes
HAVE_CXX11 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBCARES = -lcares
LIBCURL = -lcurl
LIBCURL_CPPFLAGS = 
LIBDIR = $(top_srcdir)/lib
LIBDL = -ldl
LIBMINIUPNPC = 
LIBOBJS = 
LIBPTHREAD = -lpthread
LIBREGEX = -lc
LIBRT = -lrt
LIBS = -lm  -lpthread
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBTOOLFLAGS = --silent
LIBTOOL_DEPS = misc/ltmain.sh
LIBZ = -lz
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/quinn/Documents/MyBZFlag/bzflag-grue/misc/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJC = 
OBJCDEPMODE = 
OBJCFLAGS = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = bzflag
PACKAGE_BUGREPORT = http://BZFlag.org/
PACKAGE_NAME = BZFlag
PACKAGE_STRING = BZFlag 2.4.25
PACKAGE_TARNAME = bzflag
PACKAGE_URL = 
PACKAGE_VERSION = 2.4.25
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SDL2_CONFIG = no
SDL_CFLAGS = 
SDL_CONFIG = 
SDL_LIBS = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 2.4.25
WINDRES = :
_libcurl_config = 
abs_builddir = /home/quinn/Documents/MyBZFlag/bzflag-grue/src/bzflag
abs_srcdir = /home/quinn/Documents/MyBZFlag/bzflag-grue/src/bzflag
abs_top_builddir = /home/quinn/Documents/MyBZFlag/bzflag-grue
abs_top_srcdir = /home/quinn/Documents/MyBZFlag/bzflag-grue
ac_ct_AR = 
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_OBJC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/quinn/Documents/MyBZFlag/bzflag-grue/misc/install-sh
libdir = ${exec_prefix}/lib/bzflag
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
ncurses_CFLAGS = 
ncurses_LIBS = 
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AM_CPPFLAGS = -DINSTALL_DATA_DIR=\"$(pkgdatadir)\" \
	$(SDL_CFLAGS) \
	$(LIBCURL_CPPFLAGS) \
	$(CONF_CPPFLAGS) \
	-I$(top_srcdir)/include

AM_CFLAGS = $(CONF_CFLAGS)
AM_CXXFLAGS = $(CONF_CXXFLAGS)
MAINTAINERCLEANFILES = \
	Makefile.in

bzflag_SOURCES = \
	ActionBinding.cxx		\
	ActionBinding.h			\
	AutoPilot.cxx			\
	AutoPilot.h			\
	BackgroundRenderer.cxx		\
	BackgroundRenderer.h		\
	BaseLocalPlayer.cxx		\
	BaseLocalPlayer.h		\
	CacheMenu.cxx			\
	CacheMenu.h			\
	clientConfig.cxx		\
	clientConfig.h			\
	CommandsImplementation.cxx	\
	ComposeDefaultKey.cxx		\
	ComposeDefaultKey.h		\
	ControlPanel.cxx		\
	ControlPanel.h			\
	defaultBZDB.h			\
	defaultBZDB.cxx			\
	DisplayMenu.cxx			\
	DisplayMenu.h			\
	Downloads.cxx			\
	Downloads.h			\
	EffectsMenu.cxx			\
	EffectsMenu.h			\
	effectsRenderer.cxx		\
	effectsRenderer.h		\
	EntryZone.cxx			\
	EntryZone.h			\
	FlashClock.cxx			\
	FlashClock.h			\
	ForceFeedback.cxx		\
	ForceFeedback.h			\
	FormatMenu.cxx			\
	FormatMenu.h			\
	GuidedMissleStrategy.cxx	\
	GuidedMissleStrategy.h		\
	GUIOptionsMenu.cxx		\
	GUIOptionsMenu.h		\
	HelpMenu.cxx			\
	HelpMenu.h			\
	HUDDialog.cxx			\
	HUDDialog.h			\
	HUDDialogStack.cxx		\
	HUDDialogStack.h		\
	HUDRenderer.cxx			\
	HUDRenderer.h			\
	HUDui.cxx			\
	HUDui.h				\
	HUDuiControl.cxx		\
	HUDuiControl.h			\
	HUDuiDefaultKey.cxx		\
	HUDuiDefaultKey.h		\
	HUDuiLabel.cxx			\
	HUDuiLabel.h			\
	HUDuiList.cxx			\
	HUDuiList.h			\
	HUDuiTextureLabel.cxx		\
	HUDuiTextureLabel.h		\
	HUDuiTypeIn.cxx			\
	HUDuiTypeIn.h			\
	JoinMenu.cxx			\
	JoinMenu.h			\
	InputMenu.cxx			\
	InputMenu.h			\
	KeyboardMapMenu.cxx		\
	KeyboardMapMenu.h		\
	LocalCommand.cxx		\
	LocalCommand.h			\
	LocalPlayer.cxx			\
	LocalPlayer.h			\
	MainMenu.cxx			\
	MainMenu.h			\
	MainWindow.cxx			\
	MainWindow.h			\
	MenuDefaultKey.h		\
	MenuDefaultKey.cxx		\
	motd.h				\
	motd.cxx			\
	NewVersionMenu.cxx		\
	NewVersionMenu.h		\
	OptionsMenu.cxx			\
	OptionsMenu.h			\
	Player.cxx			\
	Player.h			\
	Plan.cxx			\
	Plan.h				\
	QuickKeysMenu.cxx		\
	QuickKeysMenu.h			\
	QuitMenu.cxx			\
	QuitMenu.h			\
	RadarRenderer.cxx		\
	RadarRenderer.h			\
	Region.cxx			\
	Region.h			\
	RegionPriorityQueue.cxx		\
	RegionPriorityQueue.h		\
	RemotePlayer.cxx		\
	RemotePlayer.h			\
	Roaming.cxx			\
	Roaming.h			\
	RobotPlayer.cxx			\
	RobotPlayer.h			\
	RoofTops.cxx			\
	RoofTops.h			\
	Roster.cxx			\
	Roster.h			\
	SaveWorldMenu.cxx		\
	SaveWorldMenu.h			\
	SceneBuilder.cxx		\
	SceneBuilder.h			\
	SceneRenderer.cxx		\
	ScoreboardRenderer.cxx		\
	ScoreboardRenderer.h		\
	SegmentedShotStrategy.cxx	\
	SegmentedShotStrategy.h		\
	ServerCommandKey.cxx		\
	ServerCommandKey.h		\
	ServerLink.cxx			\
	ServerLink.h			\
	ServerListFilter.cxx		\
	ServerListFilter.h		\
	ServerListFilterHelpMenu.cxx	\
	ServerListFilterHelpMenu.h	\
	ServerListFilterMenu.cxx	\
	ServerListFilterMenu.h		\
	ServerMenu.cxx			\
	ServerMenu.h			\
	ServerStartMenu.cxx		\
	ServerStartMenu.h		\
	ShockWaveStrategy.cxx		\
	ShockWaveStrategy.h		\
	ShotPath.cxx			\
	ShotPath.h			\
	ShotPathSegment.cxx		\
	ShotPathSegment.h		\
	ShotStats.cxx			\
	ShotStats.h			\
	ShotStatsDefaultKey.cxx		\
	ShotStatsDefaultKey.h		\
	ShotStatistics.h		\
	ShotStatistics.cxx		\
	ShotStrategy.cxx		\
	ShotStrategy.h			\
	SilenceDefaultKey.cxx		\
	SilenceDefaultKey.h		\
	TargetingUtils.cxx		\
	TargetingUtils.h		\
	TrackMarks.cxx			\
	TrackMarks.h			\
	Weapon.cxx			\
	Weapon.h			\
	WeatherRenderer.h		\
	WeatherRenderer.cxx		\
	World.cxx			\
	World.h				\
	WorldBuilder.cxx		\
	WorldBuilder.h			\
	WorldPlayer.cxx			\
	WorldPlayer.h			\
	bzflag.cxx			\
	bzflag.h			\
	callbacks.cxx			\
	callbacks.h			\
	clientCommands.cxx		\
	commands.h			\
	daylight.cxx			\
	daylight.h			\
	playing.cxx			\
	playing.h			\
	sound.cxx			\
	sound.h				\
	stars.cxx			\
	stars.h

RESOURCE = 
#RESOURCE = bzflag.res
LDADD = \
	../3D/lib3D.la			\
	../game/libGame.la		\
	../net/libNet.la		\
	../obstacle/libObstacle.la	\
	../platform/libPlatform.la	\
	../ogl/libGLKit.la		\
	../scene/libSceneDB.la		\
	../geometry/libGeometry.la	\
	../mediafile/libMediaFile.la	\
	../common/libCommon.la		\
	$(LIBCARES)			\
	$(LIBREGEX)			\
	$(LIBZ)				\
	$(RESOURCE)			\
	$(SDL_LIBS)			\
	$(SDL_IMAGE_LIBS)		\
	$(GLIBS)			\
	$(LIBCURL)			\
	$(GLEW_LIBS)	\
	../date/libDate.la

all: all-am

.SUFFIXES:
.SUFFIXES: .cxx .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/bzflag/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/bzflag/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

bzflag$(EXEEXT): $(bzflag_OBJECTS) $(bzflag_DEPENDENCIES) $(EXTRA_bzflag_DEPENDENCIES) 
	@rm -f bzflag$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bzflag_OBJECTS) $(bzflag_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ActionBinding.Po # am--include-marker
include ./$(DEPDIR)/AutoPilot.Po # am--include-marker
include ./$(DEPDIR)/BackgroundRenderer.Po # am--include-marker
include ./$(DEPDIR)/BaseLocalPlayer.Po # am--include-marker
include ./$(DEPDIR)/CacheMenu.Po # am--include-marker
include ./$(DEPDIR)/CommandsImplementation.Po # am--include-marker
include ./$(DEPDIR)/ComposeDefaultKey.Po # am--include-marker
include ./$(DEPDIR)/ControlPanel.Po # am--include-marker
include ./$(DEPDIR)/DisplayMenu.Po # am--include-marker
include ./$(DEPDIR)/Downloads.Po # am--include-marker
include ./$(DEPDIR)/EffectsMenu.Po # am--include-marker
include ./$(DEPDIR)/EntryZone.Po # am--include-marker
include ./$(DEPDIR)/FlashClock.Po # am--include-marker
include ./$(DEPDIR)/ForceFeedback.Po # am--include-marker
include ./$(DEPDIR)/FormatMenu.Po # am--include-marker
include ./$(DEPDIR)/GUIOptionsMenu.Po # am--include-marker
include ./$(DEPDIR)/GuidedMissleStrategy.Po # am--include-marker
include ./$(DEPDIR)/HUDDialog.Po # am--include-marker
include ./$(DEPDIR)/HUDDialogStack.Po # am--include-marker
include ./$(DEPDIR)/HUDRenderer.Po # am--include-marker
include ./$(DEPDIR)/HUDui.Po # am--include-marker
include ./$(DEPDIR)/HUDuiControl.Po # am--include-marker
include ./$(DEPDIR)/HUDuiDefaultKey.Po # am--include-marker
include ./$(DEPDIR)/HUDuiLabel.Po # am--include-marker
include ./$(DEPDIR)/HUDuiList.Po # am--include-marker
include ./$(DEPDIR)/HUDuiTextureLabel.Po # am--include-marker
include ./$(DEPDIR)/HUDuiTypeIn.Po # am--include-marker
include ./$(DEPDIR)/HelpMenu.Po # am--include-marker
include ./$(DEPDIR)/InputMenu.Po # am--include-marker
include ./$(DEPDIR)/JoinMenu.Po # am--include-marker
include ./$(DEPDIR)/KeyboardMapMenu.Po # am--include-marker
include ./$(DEPDIR)/LocalCommand.Po # am--include-marker
include ./$(DEPDIR)/LocalPlayer.Po # am--include-marker
include ./$(DEPDIR)/MainMenu.Po # am--include-marker
include ./$(DEPDIR)/MainWindow.Po # am--include-marker
include ./$(DEPDIR)/MenuDefaultKey.Po # am--include-marker
include ./$(DEPDIR)/NewVersionMenu.Po # am--include-marker
include ./$(DEPDIR)/OptionsMenu.Po # am--include-marker
include ./$(DEPDIR)/Plan.Po # am--include-marker
include ./$(DEPDIR)/Player.Po # am--include-marker
include ./$(DEPDIR)/QuickKeysMenu.Po # am--include-marker
include ./$(DEPDIR)/QuitMenu.Po # am--include-marker
include ./$(DEPDIR)/RadarRenderer.Po # am--include-marker
include ./$(DEPDIR)/Region.Po # am--include-marker
include ./$(DEPDIR)/RegionPriorityQueue.Po # am--include-marker
include ./$(DEPDIR)/RemotePlayer.Po # am--include-marker
include ./$(DEPDIR)/Roaming.Po # am--include-marker
include ./$(DEPDIR)/RobotPlayer.Po # am--include-marker
include ./$(DEPDIR)/RoofTops.Po # am--include-marker
include ./$(DEPDIR)/Roster.Po # am--include-marker
include ./$(DEPDIR)/SaveWorldMenu.Po # am--include-marker
include ./$(DEPDIR)/SceneBuilder.Po # am--include-marker
include ./$(DEPDIR)/SceneRenderer.Po # am--include-marker
include ./$(DEPDIR)/ScoreboardRenderer.Po # am--include-marker
include ./$(DEPDIR)/SegmentedShotStrategy.Po # am--include-marker
include ./$(DEPDIR)/ServerCommandKey.Po # am--include-marker
include ./$(DEPDIR)/ServerLink.Po # am--include-marker
include ./$(DEPDIR)/ServerListFilter.Po # am--include-marker
include ./$(DEPDIR)/ServerListFilterHelpMenu.Po # am--include-marker
include ./$(DEPDIR)/ServerListFilterMenu.Po # am--include-marker
include ./$(DEPDIR)/ServerMenu.Po # am--include-marker
include ./$(DEPDIR)/ServerStartMenu.Po # am--include-marker
include ./$(DEPDIR)/ShockWaveStrategy.Po # am--include-marker
include ./$(DEPDIR)/ShotPath.Po # am--include-marker
include ./$(DEPDIR)/ShotPathSegment.Po # am--include-marker
include ./$(DEPDIR)/ShotStatistics.Po # am--include-marker
include ./$(DEPDIR)/ShotStats.Po # am--include-marker
include ./$(DEPDIR)/ShotStatsDefaultKey.Po # am--include-marker
include ./$(DEPDIR)/ShotStrategy.Po # am--include-marker
include ./$(DEPDIR)/SilenceDefaultKey.Po # am--include-marker
include ./$(DEPDIR)/TargetingUtils.Po # am--include-marker
include ./$(DEPDIR)/TrackMarks.Po # am--include-marker
include ./$(DEPDIR)/Weapon.Po # am--include-marker
include ./$(DEPDIR)/WeatherRenderer.Po # am--include-marker
include ./$(DEPDIR)/World.Po # am--include-marker
include ./$(DEPDIR)/WorldBuilder.Po # am--include-marker
include ./$(DEPDIR)/WorldPlayer.Po # am--include-marker
include ./$(DEPDIR)/bzflag.Po # am--include-marker
include ./$(DEPDIR)/callbacks.Po # am--include-marker
include ./$(DEPDIR)/clientCommands.Po # am--include-marker
include ./$(DEPDIR)/clientConfig.Po # am--include-marker
include ./$(DEPDIR)/daylight.Po # am--include-marker
include ./$(DEPDIR)/defaultBZDB.Po # am--include-marker
include ./$(DEPDIR)/effectsRenderer.Po # am--include-marker
include ./$(DEPDIR)/motd.Po # am--include-marker
include ./$(DEPDIR)/playing.Po # am--include-marker
include ./$(DEPDIR)/sound.Po # am--include-marker
include ./$(DEPDIR)/stars.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cxx.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/ActionBinding.Po
	-rm -f ./$(DEPDIR)/AutoPilot.Po
	-rm -f ./$(DEPDIR)/BackgroundRenderer.Po
	-rm -f ./$(DEPDIR)/BaseLocalPlayer.Po
	-rm -f ./$(DEPDIR)/CacheMenu.Po
	-rm -f ./$(DEPDIR)/CommandsImplementation.Po
	-rm -f ./$(DEPDIR)/ComposeDefaultKey.Po
	-rm -f ./$(DEPDIR)/ControlPanel.Po
	-rm -f ./$(DEPDIR)/DisplayMenu.Po
	-rm -f ./$(DEPDIR)/Downloads.Po
	-rm -f ./$(DEPDIR)/EffectsMenu.Po
	-rm -f ./$(DEPDIR)/EntryZone.Po
	-rm -f ./$(DEPDIR)/FlashClock.Po
	-rm -f ./$(DEPDIR)/ForceFeedback.Po
	-rm -f ./$(DEPDIR)/FormatMenu.Po
	-rm -f ./$(DEPDIR)/GUIOptionsMenu.Po
	-rm -f ./$(DEPDIR)/GuidedMissleStrategy.Po
	-rm -f ./$(DEPDIR)/HUDDialog.Po
	-rm -f ./$(DEPDIR)/HUDDialogStack.Po
	-rm -f ./$(DEPDIR)/HUDRenderer.Po
	-rm -f ./$(DEPDIR)/HUDui.Po
	-rm -f ./$(DEPDIR)/HUDuiControl.Po
	-rm -f ./$(DEPDIR)/HUDuiDefaultKey.Po
	-rm -f ./$(DEPDIR)/HUDuiLabel.Po
	-rm -f ./$(DEPDIR)/HUDuiList.Po
	-rm -f ./$(DEPDIR)/HUDuiTextureLabel.Po
	-rm -f ./$(DEPDIR)/HUDuiTypeIn.Po
	-rm -f ./$(DEPDIR)/HelpMenu.Po
	-rm -f ./$(DEPDIR)/InputMenu.Po
	-rm -f ./$(DEPDIR)/JoinMenu.Po
	-rm -f ./$(DEPDIR)/KeyboardMapMenu.Po
	-rm -f ./$(DEPDIR)/LocalCommand.Po
	-rm -f ./$(DEPDIR)/LocalPlayer.Po
	-rm -f ./$(DEPDIR)/MainMenu.Po
	-rm -f ./$(DEPDIR)/MainWindow.Po
	-rm -f ./$(DEPDIR)/MenuDefaultKey.Po
	-rm -f ./$(DEPDIR)/NewVersionMenu.Po
	-rm -f ./$(DEPDIR)/OptionsMenu.Po
	-rm -f ./$(DEPDIR)/Plan.Po
	-rm -f ./$(DEPDIR)/Player.Po
	-rm -f ./$(DEPDIR)/QuickKeysMenu.Po
	-rm -f ./$(DEPDIR)/QuitMenu.Po
	-rm -f ./$(DEPDIR)/RadarRenderer.Po
	-rm -f ./$(DEPDIR)/Region.Po
	-rm -f ./$(DEPDIR)/RegionPriorityQueue.Po
	-rm -f ./$(DEPDIR)/RemotePlayer.Po
	-rm -f ./$(DEPDIR)/Roaming.Po
	-rm -f ./$(DEPDIR)/RobotPlayer.Po
	-rm -f ./$(DEPDIR)/RoofTops.Po
	-rm -f ./$(DEPDIR)/Roster.Po
	-rm -f ./$(DEPDIR)/SaveWorldMenu.Po
	-rm -f ./$(DEPDIR)/SceneBuilder.Po
	-rm -f ./$(DEPDIR)/SceneRenderer.Po
	-rm -f ./$(DEPDIR)/ScoreboardRenderer.Po
	-rm -f ./$(DEPDIR)/SegmentedShotStrategy.Po
	-rm -f ./$(DEPDIR)/ServerCommandKey.Po
	-rm -f ./$(DEPDIR)/ServerLink.Po
	-rm -f ./$(DEPDIR)/ServerListFilter.Po
	-rm -f ./$(DEPDIR)/ServerListFilterHelpMenu.Po
	-rm -f ./$(DEPDIR)/ServerListFilterMenu.Po
	-rm -f ./$(DEPDIR)/ServerMenu.Po
	-rm -f ./$(DEPDIR)/ServerStartMenu.Po
	-rm -f ./$(DEPDIR)/ShockWaveStrategy.Po
	-rm -f ./$(DEPDIR)/ShotPath.Po
	-rm -f ./$(DEPDIR)/ShotPathSegment.Po
	-rm -f ./$(DEPDIR)/ShotStatistics.Po
	-rm -f ./$(DEPDIR)/ShotStats.Po
	-rm -f ./$(DEPDIR)/ShotStatsDefaultKey.Po
	-rm -f ./$(DEPDIR)/ShotStrategy.Po
	-rm -f ./$(DEPDIR)/SilenceDefaultKey.Po
	-rm -f ./$(DEPDIR)/TargetingUtils.Po
	-rm -f ./$(DEPDIR)/TrackMarks.Po
	-rm -f ./$(DEPDIR)/Weapon.Po
	-rm -f ./$(DEPDIR)/WeatherRenderer.Po
	-rm -f ./$(DEPDIR)/World.Po
	-rm -f ./$(DEPDIR)/WorldBuilder.Po
	-rm -f ./$(DEPDIR)/WorldPlayer.Po
	-rm -f ./$(DEPDIR)/bzflag.Po
	-rm -f ./$(DEPDIR)/callbacks.Po
	-rm -f ./$(DEPDIR)/clientCommands.Po
	-rm -f ./$(DEPDIR)/clientConfig.Po
	-rm -f ./$(DEPDIR)/daylight.Po
	-rm -f ./$(DEPDIR)/defaultBZDB.Po
	-rm -f ./$(DEPDIR)/effectsRenderer.Po
	-rm -f ./$(DEPDIR)/motd.Po
	-rm -f ./$(DEPDIR)/playing.Po
	-rm -f ./$(DEPDIR)/sound.Po
	-rm -f ./$(DEPDIR)/stars.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/ActionBinding.Po
	-rm -f ./$(DEPDIR)/AutoPilot.Po
	-rm -f ./$(DEPDIR)/BackgroundRenderer.Po
	-rm -f ./$(DEPDIR)/BaseLocalPlayer.Po
	-rm -f ./$(DEPDIR)/CacheMenu.Po
	-rm -f ./$(DEPDIR)/CommandsImplementation.Po
	-rm -f ./$(DEPDIR)/ComposeDefaultKey.Po
	-rm -f ./$(DEPDIR)/ControlPanel.Po
	-rm -f ./$(DEPDIR)/DisplayMenu.Po
	-rm -f ./$(DEPDIR)/Downloads.Po
	-rm -f ./$(DEPDIR)/EffectsMenu.Po
	-rm -f ./$(DEPDIR)/EntryZone.Po
	-rm -f ./$(DEPDIR)/FlashClock.Po
	-rm -f ./$(DEPDIR)/ForceFeedback.Po
	-rm -f ./$(DEPDIR)/FormatMenu.Po
	-rm -f ./$(DEPDIR)/GUIOptionsMenu.Po
	-rm -f ./$(DEPDIR)/GuidedMissleStrategy.Po
	-rm -f ./$(DEPDIR)/HUDDialog.Po
	-rm -f ./$(DEPDIR)/HUDDialogStack.Po
	-rm -f ./$(DEPDIR)/HUDRenderer.Po
	-rm -f ./$(DEPDIR)/HUDui.Po
	-rm -f ./$(DEPDIR)/HUDuiControl.Po
	-rm -f ./$(DEPDIR)/HUDuiDefaultKey.Po
	-rm -f ./$(DEPDIR)/HUDuiLabel.Po
	-rm -f ./$(DEPDIR)/HUDuiList.Po
	-rm -f ./$(DEPDIR)/HUDuiTextureLabel.Po
	-rm -f ./$(DEPDIR)/HUDuiTypeIn.Po
	-rm -f ./$(DEPDIR)/HelpMenu.Po
	-rm -f ./$(DEPDIR)/InputMenu.Po
	-rm -f ./$(DEPDIR)/JoinMenu.Po
	-rm -f ./$(DEPDIR)/KeyboardMapMenu.Po
	-rm -f ./$(DEPDIR)/LocalCommand.Po
	-rm -f ./$(DEPDIR)/LocalPlayer.Po
	-rm -f ./$(DEPDIR)/MainMenu.Po
	-rm -f ./$(DEPDIR)/MainWindow.Po
	-rm -f ./$(DEPDIR)/MenuDefaultKey.Po
	-rm -f ./$(DEPDIR)/NewVersionMenu.Po
	-rm -f ./$(DEPDIR)/OptionsMenu.Po
	-rm -f ./$(DEPDIR)/Plan.Po
	-rm -f ./$(DEPDIR)/Player.Po
	-rm -f ./$(DEPDIR)/QuickKeysMenu.Po
	-rm -f ./$(DEPDIR)/QuitMenu.Po
	-rm -f ./$(DEPDIR)/RadarRenderer.Po
	-rm -f ./$(DEPDIR)/Region.Po
	-rm -f ./$(DEPDIR)/RegionPriorityQueue.Po
	-rm -f ./$(DEPDIR)/RemotePlayer.Po
	-rm -f ./$(DEPDIR)/Roaming.Po
	-rm -f ./$(DEPDIR)/RobotPlayer.Po
	-rm -f ./$(DEPDIR)/RoofTops.Po
	-rm -f ./$(DEPDIR)/Roster.Po
	-rm -f ./$(DEPDIR)/SaveWorldMenu.Po
	-rm -f ./$(DEPDIR)/SceneBuilder.Po
	-rm -f ./$(DEPDIR)/SceneRenderer.Po
	-rm -f ./$(DEPDIR)/ScoreboardRenderer.Po
	-rm -f ./$(DEPDIR)/SegmentedShotStrategy.Po
	-rm -f ./$(DEPDIR)/ServerCommandKey.Po
	-rm -f ./$(DEPDIR)/ServerLink.Po
	-rm -f ./$(DEPDIR)/ServerListFilter.Po
	-rm -f ./$(DEPDIR)/ServerListFilterHelpMenu.Po
	-rm -f ./$(DEPDIR)/ServerListFilterMenu.Po
	-rm -f ./$(DEPDIR)/ServerMenu.Po
	-rm -f ./$(DEPDIR)/ServerStartMenu.Po
	-rm -f ./$(DEPDIR)/ShockWaveStrategy.Po
	-rm -f ./$(DEPDIR)/ShotPath.Po
	-rm -f ./$(DEPDIR)/ShotPathSegment.Po
	-rm -f ./$(DEPDIR)/ShotStatistics.Po
	-rm -f ./$(DEPDIR)/ShotStats.Po
	-rm -f ./$(DEPDIR)/ShotStatsDefaultKey.Po
	-rm -f ./$(DEPDIR)/ShotStrategy.Po
	-rm -f ./$(DEPDIR)/SilenceDefaultKey.Po
	-rm -f ./$(DEPDIR)/TargetingUtils.Po
	-rm -f ./$(DEPDIR)/TrackMarks.Po
	-rm -f ./$(DEPDIR)/Weapon.Po
	-rm -f ./$(DEPDIR)/WeatherRenderer.Po
	-rm -f ./$(DEPDIR)/World.Po
	-rm -f ./$(DEPDIR)/WorldBuilder.Po
	-rm -f ./$(DEPDIR)/WorldPlayer.Po
	-rm -f ./$(DEPDIR)/bzflag.Po
	-rm -f ./$(DEPDIR)/callbacks.Po
	-rm -f ./$(DEPDIR)/clientCommands.Po
	-rm -f ./$(DEPDIR)/clientConfig.Po
	-rm -f ./$(DEPDIR)/daylight.Po
	-rm -f ./$(DEPDIR)/defaultBZDB.Po
	-rm -f ./$(DEPDIR)/effectsRenderer.Po
	-rm -f ./$(DEPDIR)/motd.Po
	-rm -f ./$(DEPDIR)/playing.Po
	-rm -f ./$(DEPDIR)/sound.Po
	-rm -f ./$(DEPDIR)/stars.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile

# This is required to hook in ogg/vorbis libraries
#	$(ALIBS)

bzflag.res: $(top_srcdir)/win32/bzflag.rc $(top_srcdir)/win32/bzflag.ico
	$(WINDRES) --include-dir=$(top_srcdir)/win32/ -i $(top_srcdir)/win32/bzflag.rc -o bzflag.res \
	-O coff

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
